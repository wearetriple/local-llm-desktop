trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

jobs:
  - job: Validate
    displayName: 'Validate'
    steps:
      - checkout: self

      - task: NodeTool@0
        inputs:
          versionSpec: '20.x'
        displayName: 'Install Node.js'

      - task: Cache@2
        inputs:
          key: 'npm | "$(Agent.OS)" | package-lock.json'
          restoreKeys: |
            npm | "$(Agent.OS)"
          path: ./node_modules
        displayName: Cache npm packages

      - script: |
          npm ci
        displayName: 'Install Dependencies'

      - script: |
          npm audit --omit=dev
        displayName: 'Run audit'

      - script: |
          npm run lint
        displayName: 'Run lint'

      - script: |
          npm run typecheck
        displayName: 'Run typecheck'

  - deployment: BuildWindows
    displayName: 'Build Windows Application'
    dependsOn: Validate
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    environment:
      name: 'local-llm-desktop-production'
    pool:
      vmImage: 'windows-latest'
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
            - task: NodeTool@0
              inputs:
                versionSpec: '20.x'
              displayName: 'Install Node.js'

            - task: Cache@2
              inputs:
                key: 'npm | "$(Agent.OS)" | package-lock.json'
                restoreKeys: |
                  npm | "$(Agent.OS)"
                path: ./node_modules
              displayName: Cache npm packages

            - script: |
                npm ci
              displayName: 'Install Dependencies'

            - script: |
                npm run build:win
              displayName: 'Build Windows Application'

            - task: PublishPipelineArtifact@1
              inputs:
                targetPath: '$(System.DefaultWorkingDirectory)/dist'
                artifact: 'windows-build'
                publishLocation: 'pipeline'
              displayName: 'Publish Windows Build Artifacts'

  - deployment: BuildMac
    displayName: 'Build Mac Application'
    dependsOn: Validate
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    environment:
      name: 'local-llm-desktop-production'
    pool:
      vmImage: 'macos-latest'
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self

            - task: NodeTool@0
              inputs:
                versionSpec: '20.x'
              displayName: 'Install Node.js'

            - task: Cache@2
              inputs:
                key: 'npm | "$(Agent.OS)" | package-lock.json'
                restoreKeys: |
                  npm | "$(Agent.OS)"
                path: ./node_modules
              displayName: Cache npm packages

            - script: |
                npm ci
              displayName: 'Install Dependencies'

            - script: |
                npm run build:mac
              displayName: 'Build Mac Application'

            - task: PublishPipelineArtifact@1
              inputs:
                targetPath: '$(System.DefaultWorkingDirectory)/dist'
                artifact: 'mac-build'
                publishLocation: 'pipeline'
              displayName: 'Publish Mac Build Artifacts'

